/*
Sumo Logic Organizations Management API

Welcome to the Sumo Logic's API Reference for Organizations Management. You can use these APIs to interact with the Sumo Logic platform to manage accounts and subscription. Refer to [API Authentication](https://help.sumologic.com/APIs/General-API-Information/API-Authentication) for more information about authentication. You can also look at [other APIs](https://help.sumologic.com/APIs) for more information about some other API endpoints. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrganizationWithSubscriptionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationWithSubscriptionDetails{}

// OrganizationWithSubscriptionDetails struct for OrganizationWithSubscriptionDetails
type OrganizationWithSubscriptionDetails struct {
	// Email address of the account owner.
	Email string `json:"email"`
	// Name of the organization.
	OrganizationName string `json:"organizationName" validate:"regexp=^([a-zA-Z0-9 +%\\\\-@.,_()]+)$"`
	// First name of the account owner.
	FirstName string `json:"firstName"`
	// Last name of the account owner.
	LastName *string `json:"lastName,omitempty"`
	// Identifier of the deployment in which the organization should be created.
	DeploymentId string `json:"deploymentId" validate:"regexp=^(mb|stag|long|prod|us2|dub|syd|mum|fra|tky|mon|fed|au|ca|de|eu|in|jp|us1)$"`
	// Specify the duration of the Trial plan. If not specified, your subscription plan will be used for the created organization.
	TrialPlanPeriod *int32 `json:"trialPlanPeriod,omitempty"`
	Baselines *Baselines `json:"baselines,omitempty"`
}

type _OrganizationWithSubscriptionDetails OrganizationWithSubscriptionDetails

// NewOrganizationWithSubscriptionDetails instantiates a new OrganizationWithSubscriptionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationWithSubscriptionDetails(email string, organizationName string, firstName string, deploymentId string) *OrganizationWithSubscriptionDetails {
	this := OrganizationWithSubscriptionDetails{}
	this.Email = email
	this.OrganizationName = organizationName
	this.FirstName = firstName
	this.DeploymentId = deploymentId
	return &this
}

// NewOrganizationWithSubscriptionDetailsWithDefaults instantiates a new OrganizationWithSubscriptionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationWithSubscriptionDetailsWithDefaults() *OrganizationWithSubscriptionDetails {
	this := OrganizationWithSubscriptionDetails{}
	return &this
}

// GetEmail returns the Email field value
func (o *OrganizationWithSubscriptionDetails) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *OrganizationWithSubscriptionDetails) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *OrganizationWithSubscriptionDetails) SetEmail(v string) {
	o.Email = v
}

// GetOrganizationName returns the OrganizationName field value
func (o *OrganizationWithSubscriptionDetails) GetOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
func (o *OrganizationWithSubscriptionDetails) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationName, true
}

// SetOrganizationName sets field value
func (o *OrganizationWithSubscriptionDetails) SetOrganizationName(v string) {
	o.OrganizationName = v
}

// GetFirstName returns the FirstName field value
func (o *OrganizationWithSubscriptionDetails) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *OrganizationWithSubscriptionDetails) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *OrganizationWithSubscriptionDetails) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *OrganizationWithSubscriptionDetails) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWithSubscriptionDetails) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *OrganizationWithSubscriptionDetails) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *OrganizationWithSubscriptionDetails) SetLastName(v string) {
	o.LastName = &v
}

// GetDeploymentId returns the DeploymentId field value
func (o *OrganizationWithSubscriptionDetails) GetDeploymentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value
// and a boolean to check if the value has been set.
func (o *OrganizationWithSubscriptionDetails) GetDeploymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentId, true
}

// SetDeploymentId sets field value
func (o *OrganizationWithSubscriptionDetails) SetDeploymentId(v string) {
	o.DeploymentId = v
}

// GetTrialPlanPeriod returns the TrialPlanPeriod field value if set, zero value otherwise.
func (o *OrganizationWithSubscriptionDetails) GetTrialPlanPeriod() int32 {
	if o == nil || IsNil(o.TrialPlanPeriod) {
		var ret int32
		return ret
	}
	return *o.TrialPlanPeriod
}

// GetTrialPlanPeriodOk returns a tuple with the TrialPlanPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWithSubscriptionDetails) GetTrialPlanPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialPlanPeriod) {
		return nil, false
	}
	return o.TrialPlanPeriod, true
}

// HasTrialPlanPeriod returns a boolean if a field has been set.
func (o *OrganizationWithSubscriptionDetails) HasTrialPlanPeriod() bool {
	if o != nil && !IsNil(o.TrialPlanPeriod) {
		return true
	}

	return false
}

// SetTrialPlanPeriod gets a reference to the given int32 and assigns it to the TrialPlanPeriod field.
func (o *OrganizationWithSubscriptionDetails) SetTrialPlanPeriod(v int32) {
	o.TrialPlanPeriod = &v
}

// GetBaselines returns the Baselines field value if set, zero value otherwise.
func (o *OrganizationWithSubscriptionDetails) GetBaselines() Baselines {
	if o == nil || IsNil(o.Baselines) {
		var ret Baselines
		return ret
	}
	return *o.Baselines
}

// GetBaselinesOk returns a tuple with the Baselines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWithSubscriptionDetails) GetBaselinesOk() (*Baselines, bool) {
	if o == nil || IsNil(o.Baselines) {
		return nil, false
	}
	return o.Baselines, true
}

// HasBaselines returns a boolean if a field has been set.
func (o *OrganizationWithSubscriptionDetails) HasBaselines() bool {
	if o != nil && !IsNil(o.Baselines) {
		return true
	}

	return false
}

// SetBaselines gets a reference to the given Baselines and assigns it to the Baselines field.
func (o *OrganizationWithSubscriptionDetails) SetBaselines(v Baselines) {
	o.Baselines = &v
}

func (o OrganizationWithSubscriptionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationWithSubscriptionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["organizationName"] = o.OrganizationName
	toSerialize["firstName"] = o.FirstName
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	toSerialize["deploymentId"] = o.DeploymentId
	if !IsNil(o.TrialPlanPeriod) {
		toSerialize["trialPlanPeriod"] = o.TrialPlanPeriod
	}
	if !IsNil(o.Baselines) {
		toSerialize["baselines"] = o.Baselines
	}
	return toSerialize, nil
}

func (o *OrganizationWithSubscriptionDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"organizationName",
		"firstName",
		"deploymentId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationWithSubscriptionDetails := _OrganizationWithSubscriptionDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrganizationWithSubscriptionDetails)

	if err != nil {
		return err
	}

	*o = OrganizationWithSubscriptionDetails(varOrganizationWithSubscriptionDetails)

	return err
}

type NullableOrganizationWithSubscriptionDetails struct {
	value *OrganizationWithSubscriptionDetails
	isSet bool
}

func (v NullableOrganizationWithSubscriptionDetails) Get() *OrganizationWithSubscriptionDetails {
	return v.value
}

func (v *NullableOrganizationWithSubscriptionDetails) Set(val *OrganizationWithSubscriptionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationWithSubscriptionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationWithSubscriptionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationWithSubscriptionDetails(val *OrganizationWithSubscriptionDetails) *NullableOrganizationWithSubscriptionDetails {
	return &NullableOrganizationWithSubscriptionDetails{value: val, isSet: true}
}

func (v NullableOrganizationWithSubscriptionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationWithSubscriptionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


