/*
Sumo Logic Organizations Management API

Welcome to the Sumo Logic's API Reference for Organizations Management. You can use these APIs to interact with the Sumo Logic platform to manage accounts and subscription. Refer to [API Authentication](https://help.sumologic.com/APIs/General-API-Information/API-Authentication) for more information about authentication. You can also look at [other APIs](https://help.sumologic.com/APIs) for more information about some other API endpoints. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReadOrganizationResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadOrganizationResponseAllOf{}

// ReadOrganizationResponseAllOf struct for ReadOrganizationResponseAllOf
type ReadOrganizationResponseAllOf struct {
	Subscription CreditsSubscription `json:"subscription"`
	// The unique identifier of an organization. It consists of the deployment ID and the hexadecimal account ID separated by a dash `-` character.
	OrgId string `json:"orgId"`
	// Identifier of the deployment in which the organization is present.
	DeploymentId *string `json:"deploymentId,omitempty" validate:"regexp=^(mb|stag|long|prod|us2|dub|syd|mum|fra|tky|mon|fed|au|ca|de|eu|in|jp|us1)$"`
}

type _ReadOrganizationResponseAllOf ReadOrganizationResponseAllOf

// NewReadOrganizationResponseAllOf instantiates a new ReadOrganizationResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadOrganizationResponseAllOf(subscription CreditsSubscription, orgId string) *ReadOrganizationResponseAllOf {
	this := ReadOrganizationResponseAllOf{}
	this.Subscription = subscription
	this.OrgId = orgId
	return &this
}

// NewReadOrganizationResponseAllOfWithDefaults instantiates a new ReadOrganizationResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadOrganizationResponseAllOfWithDefaults() *ReadOrganizationResponseAllOf {
	this := ReadOrganizationResponseAllOf{}
	return &this
}

// GetSubscription returns the Subscription field value
func (o *ReadOrganizationResponseAllOf) GetSubscription() CreditsSubscription {
	if o == nil {
		var ret CreditsSubscription
		return ret
	}

	return o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value
// and a boolean to check if the value has been set.
func (o *ReadOrganizationResponseAllOf) GetSubscriptionOk() (*CreditsSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscription, true
}

// SetSubscription sets field value
func (o *ReadOrganizationResponseAllOf) SetSubscription(v CreditsSubscription) {
	o.Subscription = v
}

// GetOrgId returns the OrgId field value
func (o *ReadOrganizationResponseAllOf) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *ReadOrganizationResponseAllOf) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *ReadOrganizationResponseAllOf) SetOrgId(v string) {
	o.OrgId = v
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise.
func (o *ReadOrganizationResponseAllOf) GetDeploymentId() string {
	if o == nil || IsNil(o.DeploymentId) {
		var ret string
		return ret
	}
	return *o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadOrganizationResponseAllOf) GetDeploymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentId) {
		return nil, false
	}
	return o.DeploymentId, true
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *ReadOrganizationResponseAllOf) HasDeploymentId() bool {
	if o != nil && !IsNil(o.DeploymentId) {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given string and assigns it to the DeploymentId field.
func (o *ReadOrganizationResponseAllOf) SetDeploymentId(v string) {
	o.DeploymentId = &v
}

func (o ReadOrganizationResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadOrganizationResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscription"] = o.Subscription
	toSerialize["orgId"] = o.OrgId
	if !IsNil(o.DeploymentId) {
		toSerialize["deploymentId"] = o.DeploymentId
	}
	return toSerialize, nil
}

func (o *ReadOrganizationResponseAllOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subscription",
		"orgId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReadOrganizationResponseAllOf := _ReadOrganizationResponseAllOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReadOrganizationResponseAllOf)

	if err != nil {
		return err
	}

	*o = ReadOrganizationResponseAllOf(varReadOrganizationResponseAllOf)

	return err
}

type NullableReadOrganizationResponseAllOf struct {
	value *ReadOrganizationResponseAllOf
	isSet bool
}

func (v NullableReadOrganizationResponseAllOf) Get() *ReadOrganizationResponseAllOf {
	return v.value
}

func (v *NullableReadOrganizationResponseAllOf) Set(val *ReadOrganizationResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableReadOrganizationResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableReadOrganizationResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadOrganizationResponseAllOf(val *ReadOrganizationResponseAllOf) *NullableReadOrganizationResponseAllOf {
	return &NullableReadOrganizationResponseAllOf{value: val, isSet: true}
}

func (v NullableReadOrganizationResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadOrganizationResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


